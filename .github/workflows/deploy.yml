name: Laravel CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: en_nur_membership_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, bcmath, zip
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 755 storage bootstrap/cache

    - name: Create Database
      run: |
        mysql --host 127.0.0.1 --port 3306 -uroot -ppassword -e "CREATE DATABASE IF NOT EXISTS en_nur_membership_test;"

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: en_nur_membership_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: |
        php artisan migrate --env=testing
        php artisan test

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Security Check
      run: |
        # Check for known security vulnerabilities
        composer audit
        
    - name: Check for sensitive files
      run: |
        # Ensure no sensitive files are committed
        if [ -f .env ]; then
          echo "ERROR: .env file found in repository!"
          exit 1
        fi
        
        if grep -r "sk_live_\|pk_live_" . --exclude-dir=vendor --exclude-dir=.git; then
          echo "ERROR: Live API keys found in repository!"
          exit 1
        fi
        
        # Check for actual hardcoded passwords (not just field names)
        if grep -r "password.*['\"][^'\"]*['\"]" . --exclude-dir=vendor --exclude-dir=.git --exclude="*.md" --exclude="*.blade.php" | grep -v "password.*env\|password.*ENV\|password.*change-me\|password.*\[ENV_CONFIGURED\]"; then
          echo "ERROR: Hardcoded passwords found in repository!"
          exit 1
        fi

  deploy:
    needs: [test, security-check]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader
      
    - name: Generate optimized files
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache
        
    - name: Deploy to production
      run: |
        echo "üöÄ Ready for production deployment!"
        echo "‚ö†Ô∏è  Remember to:"
        echo "   1. Update .env with production values"
        echo "   2. Run: php artisan migrate --force"
        echo "   3. Run: php artisan db:seed --class=ProductionSeeder"
        echo "   4. Set up SSL certificates"
        echo "   5. Configure payment gateway webhooks" 